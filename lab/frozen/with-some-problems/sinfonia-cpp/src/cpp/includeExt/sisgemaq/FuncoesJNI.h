/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class sisgemaq_jni_FuncoesJNI */

#ifndef _Included_sisgemaq_jni_FuncoesJNI
#define _Included_sisgemaq_jni_FuncoesJNI
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: pHashMacAddress */
/* Inaccessible static: pIdVersao */
/* Inaccessible static: pAtualizacao */
/* Inaccessible static: pTipo */
/* Inaccessible static: pNumeroDeSerie */
/* Inaccessible static: pApostado */
/* Inaccessible static: pGanho */
/* Inaccessible static: pDiasRestantes */
/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    hash
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_sisgemaq_jni_FuncoesJNI_hash
  (JNIEnv *, jclass, jstd::string);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    proximaAtualizacao
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_sisgemaq_jni_FuncoesJNI_proximaAtualizacao
  (JNIEnv *, jclass, jint);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    geraArquivoDeVersao
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_sisgemaq_jni_FuncoesJNI_geraArquivoDeVersao
  (JNIEnv *, jclass, jstd::string, jstd::string, jstd::string, jint, jstd::string);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    carregaLicenca
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_sisgemaq_jni_FuncoesJNI_carregaLicenca
  (JNIEnv *, jclass, jstd::string);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    gerarLicencaInicial
 * Signature: (IIII)Ljava/lang/String;
 */
JNIEXPORT jstd::string JNICALL Java_sisgemaq_jni_FuncoesJNI_gerarLicencaInicial
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    gerarLicencaFuncionamento
 * Signature: (IIIII)Ljava/lang/String;
 */
JNIEXPORT jstd::string JNICALL Java_sisgemaq_jni_FuncoesJNI_gerarLicencaFuncionamento
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    licencaCadastrada
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_sisgemaq_jni_FuncoesJNI_licencaCadastrada
  (JNIEnv *, jclass);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    licencaHabilitada
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_sisgemaq_jni_FuncoesJNI_licencaHabilitada
  (JNIEnv *, jclass);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    tempoRestante
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_sisgemaq_jni_FuncoesJNI_tempoRestante
  (JNIEnv *, jclass);

JNIEXPORT jint JNICALL Java_sisgemaq_jni_FuncoesJNI_segundosRestantes
  (JNIEnv *, jclass);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    codigoInicial
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstd::string JNICALL Java_sisgemaq_jni_FuncoesJNI_codigoInicial
  (JNIEnv *, jclass);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    codigoFuncionamento
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstd::string JNICALL Java_sisgemaq_jni_FuncoesJNI_codigoFuncionamento
  (JNIEnv *, jclass);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    entrarCodigoInicial
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_sisgemaq_jni_FuncoesJNI_entrarCodigoInicial
  (JNIEnv *, jclass, jstd::string);

/*
 * Class:     sisgemaq_jni_FuncoesJNI
 * Method:    entrarCodigoFuncionamento
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_sisgemaq_jni_FuncoesJNI_entrarCodigoFuncionamento
  (JNIEnv *, jclass, jstd::string);

#ifdef __cplusplus
}
#endif
#endif
